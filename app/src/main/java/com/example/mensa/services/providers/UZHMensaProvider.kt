package com.example.mensa.services.providers

import android.content.res.AssetManager
import com.example.mensa.models.Location
import com.example.mensa.models.Mensa
import com.example.mensa.models.Menu
import java.net.URL
import java.time.DayOfWeek
import java.time.LocalDate
import java.util.*
import kotlin.collections.ArrayList
import kotlin.collections.HashMap
import org.jsoup.Jsoup


class UZHMensaProvider(assetManager: AssetManager) : AbstractMensaProvider(assetManager) {
    private val mensaMap: MutableMap<Mensa, UzhMensa> = HashMap()

    override fun getMenus(mensa: Mensa, date: LocalDate): List<Menu> {
        val uzhMensa = mensaMap[mensa]
        if (uzhMensa === null)
            throw IllegalArgumentException("You may only pass objects generated by this provider.")

        try {
            val dayOfWeek = dayOfWeekToApiFormat(date.dayOfWeek);
            val apiUrl = "https://www.mensa.uzh.ch/de/menueplaene/${uzhMensa.apiUrlSlug}/$dayOfWeek.html"
            val htmlMenus = parseMensaHtml(apiUrl);

            return htmlMenus.map {
                val price = if (it.price != null) it.price!! else arrayOf()
                val title = if (it.title != null) it.title!! else ""
                Menu(title, it.description, price)
            }
        } catch (ex: Exception) {
            ex.printStackTrace()
            return ArrayList()
        }
    }

    private fun parseMensaHtml(url: String): List<HtmlMenu> {
        val doc = Jsoup.connect(url).get()
        val newslistDiv = doc.select("#main .mod-newslist .newslist-description").first()
        val contentDiv = newslistDiv.child(0)

        var currentMenu: HtmlMenu? = null
        val menus = ArrayList<HtmlMenu>()
        for (i in 0 until contentDiv.children().size) {
            val activeChild = contentDiv.child(i);
            if (activeChild.`is`("h3")) {
                val headerText = activeChild.text()
                if (headerText.contains("|")) {
                    if (currentMenu != null) {
                        menus.add(currentMenu)
                    }

                    currentMenu = HtmlMenu()

                    //parse header of the form einfach gut | CHF 5.40 / 7.00 / 10.50
                    val headerParts = headerText.split("|");
                    currentMenu.title = headerParts.get(0).trim()
                    currentMenu.price = headerParts.get(1)
                        .split("/")
                        .map { it.trim('C', 'H', 'F').trim() }
                        .toTypedArray()
                }
            }

            if (activeChild.`is`("p") && currentMenu != null) {
                val paragraphContent = activeChild.text()

                if (paragraphContent.startsWith("Allergikerinformationen: ")) {
                    currentMenu.allergenInfo = paragraphContent.substring("Allergikerinformationen: ".length)
                } else {
                    currentMenu.description += paragraphContent.trim()
                }
            }
        }

        if (currentMenu != null) {
            menus.add(currentMenu)
        }

        return menus;
    }

    override fun getLocations(): List<Location> {
        val uzhLocations = super.readJsonAssetFileToListOfT("uzh_mensa.json", UzhLocation::class.java);

        return uzhLocations.map { uzhLocation ->
            Location(uzhLocation.title, uzhLocation.mensas.map {
                val mensa = Mensa(
                    UUID.fromString(it.id),
                    it.title,
                    it.mealTime,
                    "http://www.mensa.uzh.ch/de/standorte/${it.infoUrlSlug}.html"
                )
                mensaMap[mensa] = it
                mensa
            })
        }
    }


    private fun dayOfWeekToApiFormat(dayOfWeek: DayOfWeek): String {
        return when (dayOfWeek) {
            DayOfWeek.MONDAY -> "montag"
            DayOfWeek.TUESDAY -> "dienstag"
            DayOfWeek.WEDNESDAY -> "mittwoch"
            DayOfWeek.THURSDAY -> "donnerstag"
            DayOfWeek.FRIDAY -> "freitag"
            DayOfWeek.SATURDAY -> "samstag"
            DayOfWeek.SUNDAY -> "sonntag"
        }
    }

    private class HtmlMenu {
        var title: String? = null
        var price: Array<String>? = null
        var description: String = ""
        var allergenInfo: String? = null
    }

    private data class UzhLocation(val title: String, val mensas: List<UzhMensa>)
    private data class UzhMensa(
        val id: String,
        val title: String,
        val mealTime: String,
        val apiUrlSlug: String,
        val infoUrlSlug: String
    )
}